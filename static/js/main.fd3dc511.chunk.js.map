{"version":3,"sources":["../../src/useJitsi.js","../../src/index.js","App.js","index.js"],"names":["useJitsi","domain","roomName","parentNodeId","useState","jitsi","setJitsi","window","parentNode","document","JitsiMeetExternalAPI","error","PropTypes","isRequired","Jutsu","props","displayName","password","subject","loadingComponent","containerStyles","jitsiContainerStyles","loading","setLoading","jitsiContainerStyle","style","object","App","room","setRoom","name","setName","call","setCall","setPassword","href","id","type","placeholder","value","onChange","e","target","onClick","event","preventDefault","role","aria-label","ReactDOM","render","getElementById"],"mappings":"swBAGMA,EAAW,SAAC,G,QAAEC,cAAqD,MAA5C,cAA4C,EAA7BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,a,EAC1BC,mBAD6C,M,SAChEC,EADgE,KACzDC,EADyD,K,4BAG7D,W,GACJC,OAAJ,qBAAiC,C,IACzBC,EAAaL,EACfM,SAASA,eADMN,GAEfM,SAFJ,K,EAIS,IAAIC,qBAAqBT,EAAQ,CAAEC,SAAF,EAAYM,WAAtD,U,EAES,CAAEG,MAAX,mG,OAEK,W,OAAMN,GAASA,EAAf,aAVT,IAaA,GAGFL,YAAqB,C,OACXY,IADW,O,SAETA,WAFS,W,aAGLA,WAAiBC,Y,ICpB3BC,EAAQ,SAACC,G,IACLb,EAA6Ca,EAD9B,SACLC,EAAmCD,EAD9B,YACQE,EAAsBF,EAD9B,SACkBG,EAAYH,EAD9B,QAEfI,EAA4DJ,EAF7C,iBAEGK,EAA0CL,EAF7C,gBAEoBM,EAAyBN,EAF7C,qB,EAIOX,oBAJP,G,SAIhBkB,EAJgB,KAIPC,EAJO,KAKjBlB,EAAQL,EAAS,CAAEE,SAAF,EAAYC,aAAnC,oBAOMqB,EAAsB,C,QACjBF,EAAUA,OADO,Q,MAAA,O,OAGlB,Q,4BAGA,W,OACR,G,EACE,0CAAgD,W,EAC9C,gC,EACA,6B,EACA,4B,GACA,MAGG,W,OAAMjB,GAASA,EAAf,aACN,CAVH,IAaE,kB,OAAKoB,MAAA,KAxBgB,C,MAAA,Q,OAEb,SAsBR,I,IACeN,GAAoB,kB,qDACjC,kB,WAEE,SAMRL,YAAkB,C,SACNF,WADM,W,YAEHA,IAFG,O,SAGNA,IAHM,O,QAIPA,IAJO,O,iBAKEA,IALF,O,gBAMCA,IAND,O,qBAOMA,IAAUc,QCjDlC,IAoCeC,EApCH,WAAO,IAAD,EACQvB,mBAAS,IADjB,mBACTwB,EADS,KACHC,EADG,OAEQzB,mBAAS,IAFjB,mBAET0B,EAFS,KAEHC,EAFG,OAGQ3B,oBAAS,GAHjB,mBAGT4B,EAHS,KAGHC,EAHG,OAIgB7B,mBAAS,IAJzB,mBAITa,EAJS,KAICiB,EAJD,KAWhB,OACE,6BACE,gDACA,gDAAqB,uBAAGC,KAAK,sCAAR,UAArB,wBAAiG,uBAAGA,KAAK,8DAAR,cAAjG,2BACCH,EAAQ,kBAAC,EAAD,CACP9B,SAAU0B,EACVX,SAAUA,EACVD,YAAac,EACbX,iBAAkB,qFAEhB,8BACE,2BAAOiB,GAAG,OAAOC,KAAK,OAAOC,YAAY,OAAOC,MAAOX,EAAMY,SAAU,SAACC,GAAD,OAAOZ,EAAQY,EAAEC,OAAOH,UAC/F,2BAAOH,GAAG,OAAOC,KAAK,OAAOC,YAAY,OAAOC,MAAOT,EAAMU,SAAU,SAACC,GAAD,OAAOV,EAAQU,EAAEC,OAAOH,UAC/F,2BAAOH,GAAG,WAAWC,KAAK,OAAOC,YAAY,sBAAsBC,MAAOtB,EAAUuB,SAAU,SAACC,GAAD,OAAOP,EAAYO,EAAEC,OAAOH,UAC1H,4BAAQI,QAnBE,SAAAC,GAClBA,EAAMC,iBACFjB,GAAQE,GAAMG,GAAQ,IAiBYI,KAAK,UAAnC,iBAKN,wCAAa,0BAAMS,KAAK,MAAMC,aAAW,UAA5B,UAAb,OAA8D,uBAAGZ,KAAK,gCAAR,qBAC9D,+BAAO,sFAA2D,uBAAGA,KAAK,iDAAR,WAA3D,4BC7Bba,IAASC,OAAO,kBAAC,EAAD,MAASxC,SAASyC,eAAe,U","file":"static/js/main.fd3dc511.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nconst useJitsi = ({ domain = 'meet.jit.si', roomName, parentNodeId }) => {\n  const [jitsi, setJitsi] = useState(null)\n\n  useEffect(() => {\n    if (window.JitsiMeetExternalAPI) {\n      const parentNode = parentNodeId\n        ? document.getElementById(parentNodeId)\n        : document.body\n      // eslint-disable-next-line no-undef\n      setJitsi(new JitsiMeetExternalAPI(domain, { roomName, parentNode }))\n    } else {\n      setJitsi({ error: 'JitsiMeetExternalAPI is not available, check if https://meet.jit.si/external_api.js was loaded' })\n    }\n    return () => jitsi && jitsi.dispose()\n  }, [])\n\n  return jitsi\n}\n\nuseJitsi.propTypes = {\n  domain: PropTypes.string,\n  roomName: PropTypes.string.isRequired,\n  parentNodeId: PropTypes.string.isRequired\n}\n\nexport default useJitsi\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport useJitsi from './useJitsi'\n\nconst Jutsu = (props) => {\n  const { roomName, displayName, password, subject } = props\n  const { loadingComponent, containerStyles, jitsiContainerStyles } = props\n\n  const [loading, setLoading] = useState(true)\n  const jitsi = useJitsi({ roomName, parentNodeId: 'jitsi-container' })\n\n  const containerStyle = {\n    width: '800px',\n    height: '400px'\n  }\n\n  const jitsiContainerStyle = {\n    display: loading ? 'none' : 'block',\n    width: '100%',\n    height: '100%'\n  }\n\n  useEffect(() => {\n    if (jitsi) {\n      jitsi.addEventListener('videoConferenceJoined', () => {\n        jitsi.executeCommand('displayName', displayName)\n        jitsi.executeCommand('password', password)\n        jitsi.executeCommand('subject', subject)\n        setLoading(false)\n      })\n    }\n    return () => jitsi && jitsi.dispose()\n  }, [jitsi])\n\n  return (\n    <div style={{ ...containerStyle, ...containerStyles }}>\n      {loading && (loadingComponent || <p>Loading ...</p>)}\n      <div\n        id='jitsi-container'\n        style={{ ...jitsiContainerStyle, ...jitsiContainerStyles }}\n      />\n    </div>\n  )\n}\n\nJutsu.propTypes = {\n  roomName: PropTypes.string.isRequired,\n  displayName: PropTypes.string,\n  password: PropTypes.string,\n  subject: PropTypes.string,\n  loadingComponent: PropTypes.object,\n  containerStyles: PropTypes.object,\n  jitsiContainerStyles: PropTypes.object\n}\n\nexport { Jutsu, useJitsi }\n","import React, { useState } from 'react'\n\nimport { Jutsu } from 'react-jutsu'\n\nconst App = () => {\n  const [room, setRoom] = useState('')\n  const [name, setName] = useState('')\n  const [call, setCall] = useState(false)\n  const [password, setPassword] = useState('')\n\n  const handleClick = event => {\n    event.preventDefault()\n    if (room && name) setCall(true)\n  }\n\n  return (\n    <div>\n      <h2>&lt;Jutsu /&gt; Demo !</h2>\n      <blockquote>View the <a href='https://github.com/this-fifo/jutsu'>source</a> for Jutsu and check <a href='https://github.com/jitsi/jitsi-meet/blob/master/doc/api.md'>jitsi-meet</a> for the Jitsi Meet API</blockquote>\n      {call ? (<Jutsu\n        roomName={room}\n        password={password}\n        displayName={name}\n        loadingComponent={<p>ʕ •ᴥ•ʔ jitsi is loading ...</p>} />)\n        : (\n          <form>\n            <input id='room' type='text' placeholder='Room' value={room} onChange={(e) => setRoom(e.target.value)} />\n            <input id='name' type='text' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)} />\n            <input id='password' type='text' placeholder='Password (optional)' value={password} onChange={(e) => setPassword(e.target.value)} />\n            <button onClick={handleClick} type='submit'>\n              Start / Join\n            </button>\n          </form>\n        )}\n      <p>Made with <span role='img' aria-label='coffee'>☕</span> by <a href='https://github.com/this-fifo'>Filipe Herculano</a></p>\n      <small><i>Note: works only on a desktop browser for now, checkout <a href='https://github.com/jitsi/jitsi-meet/pull/3518'>this PR</a> for more information</i></small>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}