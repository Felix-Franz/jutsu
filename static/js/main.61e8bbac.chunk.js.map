{"version":3,"sources":["../../src/useJitsi.js","../../src/index.js","App.js","index.js"],"names":["useJitsi","domain","parentNode","subject","password","displayName","onMeetingEnd","options","useState","loading","setLoading","error","setError","jitsi","setJitsi","window","document","client","PropTypes","object","Jutsu","loadingComponent","errorComponent","containerStyles","jitsiContainerStyles","onError","onJitsi","style","width","height","func","App","room","setRoom","name","setName","call","setCall","setPassword","href","roomName","console","log","id","type","placeholder","value","onChange","e","target","onClick","event","preventDefault","role","aria-label","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.61e8bbac.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nconst useJitsi = ({\n  domain = 'meet.jit.si',\n  parentNode,\n  subject,\n  password,\n  displayName,\n  onMeetingEnd,\n  ...options\n}) => {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [jitsi, setJitsi] = useState(null)\n\n  useEffect(() => {\n    if (!window.JitsiMeetExternalAPI) {\n      setError('JitsiMeetExternalAPI is not available, check if https://meet.jit.si/external_api.js was loaded')\n      return\n    }\n\n    options.parentNode = document.getElementById(parentNode)\n    if (!options.parentNode) {\n      setError(`Parent node is not available, check container have the correct id: \"${parentNode}\"`)\n      return\n    }\n\n    const client = new window.JitsiMeetExternalAPI(domain, {...options})\n    setJitsi(client)\n    setLoading(false)\n    setError(null)\n\n    subject && client.executeCommand('subject', subject)\n\n    client.addEventListener('videoConferenceJoined', () => {\n      password && client.executeCommand('password', password)\n      displayName && client.executeCommand('displayName', displayName)\n    })\n\n    client.addEventListener('passwordRequired', () => {\n      password && client.executeCommand('password', password)\n    })\n    onMeetingEnd && client.addEventListener('readyToClose', onMeetingEnd)\n\n    return () => jitsi && jitsi.dispose()\n  }, [window.JitsiMeetExternalAPI])\n\n  return {jitsi, error, loading}\n}\n\nuseJitsi.propTypes = {\n  options: PropTypes.shape({\n    domain: PropTypes.string,\n    roomName: PropTypes.string.isRequired,\n    subject: PropTypes.string,\n    password: PropTypes.string,\n    displayName: PropTypes.string,\n    onMeetingEnd: PropTypes.func,\n    width: PropTypes.string,\n    height: PropTypes.string,\n    parentNode: PropTypes.string,\n    configOverwrite: PropTypes.object,\n    interfaceConfigOverwrite: PropTypes.object,\n    noSSL: PropTypes.bool,\n    jwt: PropTypes.string,\n    onload: PropTypes.func,\n    invitees: PropTypes.array,\n    devices: PropTypes.object,\n    userInfo: PropTypes.object\n  })\n}\n\nexport default useJitsi\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport useJitsi from './useJitsi'\n\nconst Jutsu = ({\n  loadingComponent,\n  errorComponent,\n  containerStyles,\n  jitsiContainerStyles,\n  onError,\n  onJitsi,\n  ...options\n}) => {\n  const {loading, error, jitsi} = useJitsi({\n    parentNode: 'jitsi-container',\n    ...options\n  })\n\n  useEffect(() => {\n    if (jitsi && onJitsi) onJitsi(jitsi)\n  }, [jitsi])\n\n  useEffect(() => {\n    if (error && onError) onError(error)\n  }, [error])\n\n  return (\n    <div style={{ ...{ width: '800px', height: '400px' }, ...containerStyles }}>\n      {error && (errorComponent || <p>{error}</p>)}\n      {!error && loading && (loadingComponent || <p>Loading ...</p>)}\n      <div\n        id='jitsi-container'\n        style={{ ...{\n          display: loading ? 'none' : 'block',\n          width: '100%',\n          height: '100%'\n        },\n        ...jitsiContainerStyles }}\n      />\n    </div>\n  )\n}\n\nJutsu.propTypes = {\n  jwt: PropTypes.string,\n  domain: PropTypes.string,\n  subject: PropTypes.string,\n  password: PropTypes.string,\n  roomName: PropTypes.string.isRequired,\n  displayName: PropTypes.string,\n  onMeetingEnd: PropTypes.func,\n  loadingComponent: PropTypes.object,\n  errorComponent: PropTypes.object,\n  containerStyles: PropTypes.object,\n  jitsiContainerStyles: PropTypes.object,\n  configOverwrite: PropTypes.object,\n  interfaceConfigOverwrite: PropTypes.object,\n  onError: PropTypes.func,\n  onJitsi: PropTypes.func\n}\n\nexport { Jutsu, useJitsi }\n","import React, { useState } from 'react'\n\nimport { Jutsu } from 'react-jutsu'\n\nconst App = () => {\n  const [room, setRoom] = useState('')\n  const [name, setName] = useState('')\n  const [call, setCall] = useState(false)\n  const [password, setPassword] = useState('')\n\n  const handleClick = event => {\n    event.preventDefault()\n    if (room && name) setCall(true)\n  }\n\n  return (\n    <div>\n      <h2>&lt;Jutsu /&gt; Demo !</h2>\n      <blockquote>View the <a href='https://github.com/this-fifo/jutsu'>source</a> for Jutsu and check <a href='https://github.com/jitsi/jitsi-meet/blob/master/doc/api.md'>jitsi-meet</a> for the Jitsi Meet API</blockquote>\n      {call ? (<Jutsu\n        roomName={room}\n        password={password}\n        displayName={name}\n        onMeetingEnd={() => console.log('Meeting has ended')}\n        loadingComponent={<p>ʕ •ᴥ•ʔ jitsi is loading ...</p>} />)\n        : (\n          <form>\n            <input id='room' type='text' placeholder='Room' value={room} onChange={(e) => setRoom(e.target.value)} />\n            <input id='name' type='text' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)} />\n            <input id='password' type='text' placeholder='Password (optional)' value={password} onChange={(e) => setPassword(e.target.value)} />\n            <button onClick={handleClick} type='submit'>\n              Start / Join\n            </button>\n          </form>\n        )}\n      <p>Made with <span role='img' aria-label='coffee'>☕</span> by <a href='https://github.com/this-fifo'>Filipe Herculano</a></p>\n      <small><i>Note: works only on a desktop browser for now, checkout <a href='https://github.com/jitsi/jitsi-meet/pull/3518'>this PR</a> for more information</i></small>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}