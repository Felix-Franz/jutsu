{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["Jutsu","roomName","userName","domain","loadingComponent","containerStyles","jitsiContainerStyles","useState","loading","setLoading","ref","createRef","jitsiContainerStyle","window","api","JitsiMeetExternalAPI","parentNode","error","startConference","console","PropTypes","object","App","room","setRoom","name","setName","call","setCall","href","id","type","placeholder","value","onChange","e","target","onClick","event","preventDefault","role","aria-label","ReactDOM","render","document","getElementById"],"mappings":"swBAGMA,EAAQ,SAAC,G,IACbC,EAMI,EANJA,SACAC,EAKI,EALJA,S,IACAC,cAII,MAJK,cAIL,EAHJC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,qB,EAE8BC,oBAD1B,G,SACGC,EADH,KACYC,EADZ,KAEEC,EAAMC,sBAONC,EAAsB,C,QACjBJ,EAAUA,OADO,Q,MAAA,O,OAGlB,Q,4BAiBA,WACJK,OAAJ,qBAfsB,W,QAGdC,EAAM,IAAIC,qBAAqBZ,EAAQ,CAAEF,SAAF,EAAYe,WAAYN,EAArE,U,EACA,0CAA8C,W,QAC5C,KAAgBR,EAAhB,mB,GACA,G,EACA,mCAEF,MAAOe,G,QACP,qCAK+BC,GAC5BC,QAAQA,MAAMA,sCAFrB,IAME,kB,kBA/BqB,C,MAAA,Q,OAEb,SA8BN,I,IAEaf,GAAoB,kB,qDACjC,kB,IAAA,E,WAGE,SAMRJ,YAAkB,C,SACNoB,WADM,W,SAENA,WAFM,W,OAGRA,IAHQ,O,iBAIEA,IAJF,O,gBAKCA,IALD,O,qBAMMA,IAAUC,Q,QC5BnBC,EAhCH,WAAO,IAAD,EACQf,mBAAS,IADjB,mBACTgB,EADS,KACHC,EADG,OAEQjB,mBAAS,IAFjB,mBAETkB,EAFS,KAEHC,EAFG,OAGQnB,oBAAS,GAHjB,mBAGToB,EAHS,KAGHC,EAHG,KAUhB,OACE,6BACE,gDACA,oDAAyB,uBAAGC,KAAK,8DAAR,cAAzB,+BACCF,EAAQ,kBAAC,EAAD,CACP1B,SAAUsB,EACVrB,SAAUuB,EACVrB,iBAAkB,qFAEhB,8BACE,2BAAO0B,GAAG,OAAOC,KAAK,OAAOC,YAAY,OAAOC,MAAOV,EAAMW,SAAU,SAACC,GAAD,OAAOX,EAAQW,EAAEC,OAAOH,UAC/F,2BAAOH,GAAG,OAAOC,KAAK,OAAOC,YAAY,OAAOC,MAAOR,EAAMS,SAAU,SAACC,GAAD,OAAOT,EAAQS,EAAEC,OAAOH,UAC/F,4BAAQI,QAjBE,SAAAC,GAClBA,EAAMC,iBACFhB,GAAQE,GAAMG,GAAQ,IAeYG,KAAK,UAAnC,iBAKN,wCAAa,0BAAMS,KAAK,MAAMC,aAAW,UAA5B,UAAb,OAA8D,uBAAGZ,KAAK,gCAAR,uBCzBpEa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0eb54c01.chunk.js","sourcesContent":["import React, { createRef, useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Jutsu = ({\n  roomName,\n  userName,\n  domain = 'meet.jit.si',\n  loadingComponent,\n  containerStyles,\n  jitsiContainerStyles\n}) => {\n  const [loading, setLoading] = useState(true)\n  const ref = createRef()\n\n  const containerStyle = {\n    width: '800px',\n    height: '400px'\n  }\n\n  const jitsiContainerStyle = {\n    display: loading ? 'none' : 'block',\n    width: '100%',\n    height: '100%'\n  }\n\n  const startConference = () => {\n    try {\n      // eslint-disable-next-line no-undef\n      const api = new JitsiMeetExternalAPI(domain, { roomName, parentNode: ref.current })\n      api.addEventListener('videoConferenceJoined', () => {\n        console.info(`${userName} has entered ${roomName}`)\n        setLoading(false)\n        api.executeCommand('displayName', userName)\n      })\n    } catch (error) {\n      console.error('Failed to load Jitsi API', error)\n    }\n  }\n\n  useEffect(() => {\n    if (window.JitsiMeetExternalAPI) startConference()\n    else console.error('Jitsi Meet API script not loaded')\n  }, [])\n\n  return (\n    <div\n      style={{...containerStyle, ...containerStyles}}\n    >\n      {loading && (loadingComponent || <p>Loading ...</p>)}\n      <div\n        id='jitsi-container'\n        ref={ref}\n        style={{...jitsiContainerStyle, ...jitsiContainerStyles}}\n      />\n    </div>\n  )\n}\n\nJutsu.propTypes = {\n  roomName: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  domain: PropTypes.string,\n  loadingComponent: PropTypes.object,\n  containerStyles: PropTypes.object,\n  jitsiContainerStyles: PropTypes.object\n}\n\nexport default Jutsu\n","import React, { useState } from 'react'\n\nimport Jutsu from 'jutsu'\n\nconst App = () => {\n  const [room, setRoom] = useState('')\n  const [name, setName] = useState('')\n  const [call, setCall] = useState(false)\n\n  const handleClick = event => {\n    event.preventDefault()\n    if (room && name) setCall(true)\n  }\n\n  return (\n    <div>\n      <h2>&lt;Jutsu /&gt; Demo !</h2>\n      <blockquote>Please check <a href=\"https://github.com/jitsi/jitsi-meet/blob/master/doc/api.md\">jitsi-meet</a> for the full configuration</blockquote>\n      {call ? (<Jutsu\n        roomName={room}\n        userName={name}\n        loadingComponent={<p>ʕ •ᴥ•ʔ jitsi is loading ...</p>} />)\n        : (\n          <form>\n            <input id='room' type='text' placeholder='Room' value={room} onChange={(e) => setRoom(e.target.value)} />\n            <input id='name' type='text' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)} />\n            <button onClick={handleClick} type='submit'>\n              Start / Join\n            </button>\n          </form>\n        )}\n      <p>Made with <span role='img' aria-label='coffee'>☕</span> by <a href=\"https://github.com/this-fifo\">Filipe Herculano</a></p>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}